use PORTFOLIO_PROJECT
SELECT * FROM COVIDDEATHS ORDER BY 3,4;
SELECT * FROM COVIDVACCINATIONS ORDER BY 3,4;

--1)COUNTRYWISE CASES
SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
ORDER BY 1,2

--2)DEATH PERCENTAGE
SELECT Location,date,total_cases, total_deaths,ROUND((total_deaths/total_cases)*100,2) as DEATH_PERCENTAGE
FROM COVIDDEATHS
WHERE LOCATION = 'India'
ORDER BY 1,2

--3)CASE PERCENTAGE
SELECT Location,date,total_cases, population ,ROUND((total_cases/population)*100,2) as TOTAL_CASES_PERCENTAGE
FROM COVIDDEATHS
WHERE LOCATION = 'India'
ORDER BY 1,2

--4)% OF POPULATION OF THAT INFECTED 
SELECT Location, population ,MAX(total_cases) AS MAXIMUM_CASES,ROUND((MAX(total_cases)/population)*100,2) as INFECTED_POPULATION
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY Location,population
ORDER BY INFECTED_POPULATION DESC

--5)COUNTRYWISE NO_OF _DEATHS
SELECT Location, population ,MAX(CAST(TOTAL_DEATHS AS INT)) AS TOTAL_NO_OF_DEATHS
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY Location,population
ORDER BY  TOTAL_NO_OF_DEATHS DESC

--6)CONTINENTWISE NO_OF_DEATHS
SELECT CONTINENT,SUM(populaTION) AS TOTAL_POPULATION ,MAX(CAST(TOTAL_DEATHS AS INT)) AS NO_OF_DEATHS
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY CONTINENT
ORDER BY  NO_OF_DEATHS DESC


--7)TOTALDEATHS DUE TO COVID ACROSS THE WORLD
SELECT SUM(NEW_CASES)AS TOTAL_CASES,SUM(CAST(NEW_DEATHS AS INT))AS TOTAL_DEATHS,
ROUND((SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100),2) AS DEATH_PERCENTAGE
FROM COVIDDEATHS

--8)DATE WISE CASES ACROSS THE WORLD
SELECT CONVERT(DATE,DATE) DATE,SUM(NEW_CASES)AS TOTAL_CASES,SUM(CAST(NEW_DEATHS AS INT))AS TOTAL_DEATHS,ROUND((SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100),2) AS DEATH_PERCENTAGE
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY DATE
ORDER BY 1

--9)ON WHICH DAY DEATH_PERCENTAGE WAS MAXIMUM

WITH DATE_CTE (MAXIMUM_DEATH_PERCENTAGE)
AS
(
SELECT MAX(DEATH_PERCENTAGE) FROM (
SELECT ROUND((SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100),2) AS DEATH_PERCENTAGE
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY [DATE]) AS T1
)

SELECT CONVERT(DATE,DATE) DATE1,SUM(NEW_CASES)AS TOTAL_CASES,SUM(CAST(NEW_DEATHS AS INT))AS TOTAL_DEATHS,ROUND((SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100),2) AS DEATH_PERCENTAGE
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY DATE
HAVING ROUND((SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100),2) = (SELECT MAXIMUM_DEATH_PERCENTAGE FROM DATE_CTE)


-------------------------- WITHOUT_CTE----------------
SELECT CONVERT(DATE,DATE) DATE1,SUM(NEW_CASES)AS TOTAL_CASES,SUM(CAST(NEW_DEATHS AS INT))AS TOTAL_DEATHS,ROUND((SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100),2) AS DEATH_PERCENTAGE
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY DATE
HAVING
ROUND((SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100),2) 
=
(
SELECT MAX(DEATH_PERCENTAGE) FROM (
SELECT ROUND((SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100),2) AS DEATH_PERCENTAGE
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY [DATE]) AS T1
)




--10)WHEN THE FIRST VACCINATION PROGRAM OF COUNTRIES STARTED? & ITS DETAILS.
create procedure FIRST_VACCINATION_PROGRAM_OF @COUNTRY AS VARCHAR(40)
AS
BEGIN
SELECT top 1  location,date,new_vaccinations ,total_vaccinations ,people_vaccinated ,people_fully_vaccinated,total_boosters FROM COVIDVACCINATIONS 
WHERE  location = @COUNTRY
and
((new_vaccinations IS NOT NULL AND new_vaccinations!='0')
OR (total_vaccinations IS NOT NULL AND total_vaccinations !='0')
OR (people_vaccinated IS NOT NULL AND people_vaccinated !='0'))
ORDER BY 1,2;
END
FIRST_VACCINATION_PROGRAM_OF 'russia'



--11)WHEN A COUNTRY STARTED BOOSTER DOSES WITH HOW MANY NUMBER OF DOSES?

--DROP PROCEDURE IF EXISTS BOOSTER_DOSE_DETAILS_OF
CREATE PROCEDURE BOOSTER_DOSE_DETAILS_OF @COUNTRY VARCHAR(50)
AS
SELECT TOP 1  CONVERT(DATE,[DATE]) AS [DATE],LOCATION,total_boosters FROM covidvaccinations WHERE total_boosters IS NOT NULL 
AND CONTINENT IS NOT NULL
AND LOCATION =@COUNTRY
ORDER BY 1 ASC

BOOSTER_DOSE_DETAILS_OF 'INDIA'



--12)INDIA'S VACCINATION DETAILS

SELECT CONVERT(DATE,[DATE]) AS RECENTDATE,location,total_vaccinations,people_vaccinated,people_fully_vaccinated,total_boosters
FROM COVIDVACCINATIONS
WHERE
LOCATION ='INDIA' AND
DATE = (SELECT TOP 1 DATE FROM COVIDVACCINATIONS ORDER BY DATE DESC);



--13)COUNTRYWISE VACCINATION DETAILS
SELECT LOCATION, MAX(CONVERT(NUMERIC,TOTAL_VACCINATIONS)) TOTAL_VACCINATIONS,
MAX(CONVERT(NUMERIC,people_vaccinated)) FIRST_DOSE,
MAX(CONVERT(NUMERIC,people_fully_vaccinated)) FULL_DOSE,
MAX(CONVERT(NUMERIC,total_boosters)) BOOSTER_DOSE FROM COVIDVACCINATIONS
WHERE continent IS NOT NULL
GROUP BY LOCATION
ORDER BY 1



--14) TEST VS CASE
SELECT CONVERT(DATE,C.DATE) AS DATE,D.LOCATION,
ISNULL(NEW_TESTS,'NOT AVILABLE') TOTAL_TESTS,
ISNULL(CONVERT(VARCHAR,NEW_CASES),'NOT AVAILABLE') TOTAL_CASES 
FROM COVIDDEATHS D 
INNER JOIN COVIDVACCINATIONS C
ON D.LOCATION=C.LOCATION AND D.DATE=C.DATE
WHERE C.continent IS NOT NULL
AND D.LOCATION ='INDIA' 
ORDER BY 1

--15) TEMP TABLE FOR VACCINATION_REPORT
DROP TABLE IF EXISTS #VACCINATION_REPORT
CREATE TABLE #VACCINATION_REPORT
([DATE]  DATE,
NATION  VARCHAR(255),
NEW_VACCI VARCHAR(255),
ONLY_FIRST_DOSE VARCHAR(255),
BOTH_DOSE VARCHAR(255),
BOOSTER_DOSE VARCHAR(255)
)

INSERT INTO #VACCINATION_REPORT
SELECT DATE,LOCATION, NEW_VACCINATIONS,PEOPLE_VACCINATED,PEOPLE_FULLY_VACCINATED,TOTAL_BOOSTERS
FROM COVIDVACCINATIONS


SELECT * FROM #VACCINATION_REPORT
WHERE NATION='INDIA'
ORDER BY 1